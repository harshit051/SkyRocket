{"ast":null,"code":"var _jsxFileName = \"/home/unthinkable-lap-0240/Documents/Major Project/webapp/src/component/LoginHook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport loginImage from \"./Img/google.svg\";\nimport { AuthContext } from \"./context\";\nimport { refreshTokenSetup } from '../utils/refreshToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"621066569678-be1gnmtpcso8mft05aar9dcro217ro4e.apps.googleusercontent.com\";\n\nfunction LoginHooks() {\n  _s();\n\n  const {\n    signIn\n  } = React.useContext(AuthContext);\n\n  const onSuccess = res => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    alert(`Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`);\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert(`Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`);\n  };\n\n  const {\n    LogIn\n  } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    accessType: 'offline' // responseType: 'code',\n    // prompt: 'consent',\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: LogIn,\n    className: \"button\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"googleImg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loginImage,\n        alt: \"google login\",\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginHooks, \"Xt8KRvpyzD0h+4nmQvQhrM40iVU=\", false, function () {\n  return [useGoogleLogin];\n});\n\n_c = LoginHooks;\nexport default LoginHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginHooks\");","map":{"version":3,"sources":["/home/unthinkable-lap-0240/Documents/Major Project/webapp/src/component/LoginHook.js"],"names":["React","useGoogleLogin","loginImage","AuthContext","refreshTokenSetup","clientId","LoginHooks","signIn","useContext","onSuccess","res","console","log","profileObj","alert","name","onFailure","LogIn","isSignedIn","accessType"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAKA,MAAMC,QAAQ,GAAE,0EAAhB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM;AAAEC,IAAAA;AAAF,MAAaP,KAAK,CAACQ,UAAN,CAAiBL,WAAjB,CAAnB;;AACA,QAAMM,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAAG,CAACG,UAA/C;AAGAC,IAAAA,KAAK,CACF,kCAAiCJ,GAAG,CAACG,UAAJ,CAAeE,IAAK,8CADnD,CAAL;AAGAX,IAAAA,iBAAiB,CAACM,GAAD,CAAjB;AACD,GARD;;AAUA,QAAMM,SAAS,GAAIN,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAI,IAAAA,KAAK,CACF,6EADE,CAAL;AAGD,GALD;;AAOA,QAAM;AAAEG,IAAAA;AAAF,MAAYhB,cAAc,CAAC;AAC/BQ,IAAAA,SAD+B;AAE/BO,IAAAA,SAF+B;AAG/BX,IAAAA,QAH+B;AAI/Ba,IAAAA,UAAU,EAAE,IAJmB;AAK/BC,IAAAA,UAAU,EAAE,SALmB,CAM/B;AACA;;AAP+B,GAAD,CAAhC;AAUA,sBACE;AAAQ,IAAA,OAAO,EAAEF,KAAjB;AAAwB,IAAA,SAAS,EAAC,QAAlC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACA;AAAK,QAAA,GAAG,EAAEf,UAAV;AAAsB,QAAA,GAAG,EAAC,cAA1B;AAAyC,QAAA,SAAS,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCQI,U;UAoBWL,c;;;KApBXK,U;AAwCT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport loginImage from \"./Img/google.svg\";\nimport { AuthContext } from \"./context\";\nimport { refreshTokenSetup } from '../utils/refreshToken';\n\n\n\n\nconst clientId =\"621066569678-be1gnmtpcso8mft05aar9dcro217ro4e.apps.googleusercontent.com\";\n\nfunction LoginHooks() {\n\n  const { signIn } = React.useContext(AuthContext);\n  const onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    \n    \n    alert(\n      `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n    );\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    alert(\n      `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\n    );\n  };\n\n  const { LogIn } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    accessType: 'offline',\n    // responseType: 'code',\n    // prompt: 'consent',\n  });\n\n  return (\n    <button onClick={LogIn} className=\"button\">\n        <div className='googleImg'>\n        <img src={loginImage} alt=\"google login\" className=\"icon\"></img>\n      </div>\n    </button>\n\n  );\n}\n\nexport default LoginHooks;"]},"metadata":{},"sourceType":"module"}